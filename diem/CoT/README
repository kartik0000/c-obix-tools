
  CoT - C oBIX Tools v.0.0.0
  
 A set of tools for developing oBIX-based solutions.
 
========>>

 Copyright (c) 2009 Andrey Litvinov [litvinov.andrey@gmail.com]    
 
 CoT is a free software. It is licensed under MIT (X11) License. The text of the
 license can be found at the file COPYING.
 
========>>  
    
 This file contains description of the project in the following sections:
 
 1. Project overview
 2. Package contents
 3. Building instructions
 4. Configuring oBIX server
 
========>>

 --1-- Project overview
 
 C oBIX Tools (CoT) is an open source project dedicated for the development of 
 embedded Building Automation solutions based on oBIX standard 
 (http://www.obix.org). The whole project is written in C and has tiny resource
 requirements. It allows the project to run on embedded Linux platforms, such as
 OpenWrt (http://openwrt.org).
 
 The project consists of 2 parts:
 - C oBIX Server and
 - C oBIX Client library
 
 oBIX Server is a stand-alone application 
 %%TODO%% Please, describe me :)
 
========>>

 --2-- Package contents
 
 Below is a short description of each folder contents:
 
 README				This file. Contains project description.
 COPYING			Contains licensing terms for the project.
 
 src/				Folder with project source files.
 
    ./adapters/		Contains sources of oBIX device adapters which are 
 					implemented using libcot library. 
 
    ./adapters/example_timer.c
                    Source of example device adapter which shows how libcot can 
                    be used for oBIX client implementation.
 
    ./adapters/sensor_floor_driver.c
 					Source of sensor floor adapter.
 
    ./client/		Sources of libcot library. 

    ./common/		Common sources for client and server part of the project.
 
    ./server/		Sources of oBIX server.
 
    ./test/			Tests sources which are used only during development.
    
    ./doxygen/		Documentation source files.
 
 doc/				Contains project documentation, most of which is built by 
 					Doxygen. HTML documentation is much more easier to read, but 
 					.pdf files can be used to make a printed versions.
 
 res/				Various configuration files.
 
 res/server_config.xml
 					Main configuration file of the oBIX server.
 					
 res/server_*.xml	Rest of files with 'server_' prefix contain initial database
 					contents of the oBIX server.
 					
 res/obix-lighttpd.conf	
 					Lighttpd configuration file template. Used for configuring 
 					oBIX server.
 					
 res/sensor_floor_config.xml
 					Sensor floor adapter's configuration file.
 					
 res/example_timer_config.xml
 					Example adapter's configuration file.
 					
 res/test_*.xml		Files used by tests.
 
 res/OpenWrt-SDK/	Folder contains makefiles and instructions for building 
 					project for OpenWrt platform.            
 
========>>

 --3-- Building instructions
 
 Please refer to res/OpenWrt-SDK/README if you want to compile the project for 
 OpenWrt platform.
  
 Simple compilation can be done by executing following commands in the project 
 root folder (for advanced instructions read /INSTALL):
 
 Before the first compilation:
 
 ./configure		That will configure building system according to your system 
 					configuration. 					  					
 					
 You would probably like to use also the following flags:
   
  CFLAGS="-O0 -g"	Forces to produce binaries which are easier to debug.
  
  --prefix="<path>" Sets the installation root folder. By default, package is
  					installed to /usr/{bin,lib,include}.
 
 You will need the following libraries to build CoT (configure script should 
 tell you which are missing):
 - libfcgi
 - libupnp
 - libcurl  					
  					
 After ./configure is successfully completed execute:
 
 make all			That would compile the project. All binaries will be placed 
 					in the same folders with source files. 
 
 make install		Will put binaries, config files and documentation to the 
 					installation directories. 
 
========>>

 --4-- Configuring oBIX server
 
 oBIX server is implemented as FastCGI script which can be executed by any HTTP
 server with FCGI support. This section describes how to use lighttpd 
 (http://lighttpd.net) for running oBIX server. Most of steps would be probably 
 the same for other HTTP servers.
 
 0. Compile and install CoT (see section 3).
 
 1. Install lighttpd at your target system.
 
 2. Open server_config.xml file with your favorite XML editor. Usually it is 
    placed at <installation_prefix>/etc/cot/ folder. This is the main (and the 
    only one) configuration file of the oBIX server.
    
 3. All configuration tags are described well there: Read description carefully,
    modify and save options according to your needs.
        
 4. Open <installation-prefix>/etc/cot/obix-lighttpd.conf file. This file 
    contains required settings for lighttpd. It tells lighttpd how to launch the 
    fcgi script (i.e. oBIX server application).
    
 5. Modify paths in the following variables:
 	- "socket"  		Defines socket name which will be used for communication 
 						between lighttpd and oBIX server.
 						
 	- "bin-path"		Command which starts up the oBIX server, which is 
 						"<path-to-obix.fcgi> [-syslog] [<path-to-res-folder>]"
 						where
 						<path-to-obix.fcgi> 
 						        Location of obix.fcgi file. Note that working 
 						         directory may vary for different configurations
 						         so it's better to provide an absolute path.
 						         
 						-syslog Tells server to use syslog for logging messages
 						         before actual log settings are loaded from 
 						         configuration file. It can be useful if some
 						         error occurs, for instance, during settings 
 						         parsing. Messages are sent to syslog with 
 						         facility 'user'. 
 						         If this parameter is not provided than all 
 						         messages which were generated before log 
 						         settings are loaded will be written to the 
 						         standard output.
 						         
 						<path-to-res-folder>
 						        Address of the folder with server's resource 
 						         files. These are installed to /etc/cot/ by
 						         default.         
 						          
 						Example: If you have installed CoT to the <prefix> 
 						folder, than the "bin-path" value can look like 						
 						"<prefix>/bin/obix.fcgi <prefix>/etc/cot/"
 						
 	- "bin-environment"	This variable can be totally omitted, or used, for 
 						instance, for specifying the path to shared libraries.
 	In order to check whether the launch command in "bin-path" is correct you 
 	can try to execute it from the command line. If everything is fine, than 
 	oBIX server should start up, write few log messages and then immediately 
 	shutdown gracefully because of no fcgi connection.
 									 		 
 6. Locate your lighttpd configuration file. Usually it is at /etc/lighttpd/
 
 7. In case if you have /etc/lighttpd/conf-available/ folder than you are lucky
 	and should proceed with steps a. otherwise, go to steps b.
 	
 	a. Go to conf-available/ folder and create symlink '10-obix-fcgi.conf' to
 	   the updated <prefix>/etc/cot/obix-lighttpd.conf file. 
 	   Execute command '/usr/sbin/lighty-enable-mod obix-fcgi' and restart 
 	   lighttpd.
 	   (Read conf-available/README in order to get more details about what you
 	   have done.)
 	   
 	b. In case you do not have the described folder for lighttpd in your target 
 	   platform, than open the main lighttpd configuration file (usually it is
 	   /etc/lighttpd/lighttpd.conf) and paste to the end the contents of updated 
 	   res/obix-lighttpd.conf file.
 	   Note that "server.modules" are usually defined in the beginning of the
 	   conf file, so check that pasted string doesn't conflict with the 
 	   original definition.
 	   Save configuration and restart lighttpd.
 	   
 8. If everything is OK, than you will be able to access oBIX server from your
    browser under the following link: http://<you server address>/obix/
    In case of any problems try to check lighttpd and oBIX server error log 
    files. If it doesn't help than contact me, and I'll try to make better
    version of these instructions.
 
========>>