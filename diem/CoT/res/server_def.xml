<?xml version="1.0" encoding="UTF-8"?>
<!--
   Copyright (c) 2009, 2010 Andrey Litvinov
  
   Permission is hereby granted, free of charge, to any person obtaining a copy
   of this software and associated documentation files (the "Software"), to deal
   in the Software without restriction, including without limitation the rights
   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   copies of the Software, and to permit persons to whom the Software is
   furnished to do so, subject to the following conditions:
  
   The above copyright notice and this permission notice shall be included in
   all copies or substantial portions of the Software.
  
   THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
   THE SOFTWARE.
-->
	<!--
		Custom contracts definition.
	-->
<obj href="/obix/def/">
	<!--
		Extension for the Lobby object which allows clients adding their own
		information to the server using signUp operation.
	-->
	<obj href="SignUpLobby" is="obix:Lobby">
		<op name="signUp" in="obix:obj" out="obix:obj" />
	</obj>
	<obj href="DevicesLobby" is="obix:Lobby">
		<ref name="devices" />
	</obj>
	<!--
		Advanced Watch object, which supports long poll requests (pollChanges
		operation doesn't answer immediately, but waits for something to be
		returned for at least pollWaitInterval.min, but no more than
		pollWaitInterval.max).
	-->
	<obj href="LongPollWatch" is="obix:Watch">
		<obj name="pollWaitInterval">
			<reltime name="min" min="PT0S" val="PT0S" writable="true" />
			<reltime name="max" min="PT0S" val="PT0S" writable="true" />
		</obj>
	</obj>
	<!--
		Watch object that can be used to subscribe for operations. When 
		subscribed operation is executed, it's input argument is forwarded with
		next pollChanges response. Then subscriber should send results of 
		operation execution invoking "operationResponse".
		Note that it is not possible to subscribe to any system operation 
		(e.g. Batch).  
	-->
	<obj href="OperationWatch" is="obix:Watch">
		<op name="addOperation" in="obix:WatchIn" out="obix:WatchOut" />
		<op name="operationResponse" in="/obix/def/OperationResponse" />
	</obj> 
	
	<!--
		Object which is sent in WatchOut by OperationWatch when some monitored
		operation is invoked. Child object "in" contains input parameters of the
		invocation.  
	-->
	<op href="OperationInvocation">
		<obj name="in"/>
	</op>
	
	<!--
		 Input object for Watch.operationResponse operation. Is used to send 
		 to the server execution results of remote operation. 
		 Parent <op/> object should be the same as original operation which was
		 handled, including "href" attribute.
		 Child object "out" should contain operation results. This object will
		 be sent as a response to the client, which had invoked this remote 
		 operation.
	-->
	<op href="OperationResponse">
		<obj name="out"/>
	</op>

</obj>